{"version":3,"sources":["Articles.js","Header.js","App.js","index.js"],"names":["Articles","articles","this","props","map","article","className","key","title","src","urlToImage","alt","author","publishedAt","description","onClick","window","location","href","url","React","Component","Header","setArticles","setFilteredArticles","washingtonPost","filter","source","id","App","useState","filteredArticles","useEffect","a","fetch","response","json","data","getData","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"oTAMqBA,E,uKAGjB,IAAMC,EAAWC,KAAKC,MAAMF,SAC5B,OACE,oCAEGA,EAASG,KAAI,SAACC,GAAD,OACZ,yBAAKC,UAAU,OAAOC,IAAKF,EAAQG,OACjC,wBAAIF,UAAU,eAAeD,EAAQG,OACrC,yBACEF,UAAU,cACVG,IAAKJ,EAAQK,WACbC,IAAI,YAEN,yBAAKL,UAAU,cACb,4BAAKD,EAAQO,QACb,4BAAKP,EAAQQ,cAEf,wBAAIP,UAAU,iBAAiBD,EAAQS,aACvC,4BACER,UAAU,eACVS,QAAS,kBAAOC,OAAOC,SAASC,KAAOb,EAAQc,MAFjD,sB,GApB0BC,IAAMC,WCsC7BC,MAtCf,YAAgE,EAA9CC,YAA+C,IAAlCtB,EAAiC,EAAjCA,SAAUuB,EAAuB,EAAvBA,oBAgBvC,OACE,6BACE,wCACA,0LAOA,4BAAQT,QAfZ,WACES,EAAoBvB,IAcUK,UAAU,aAAtC,iBAKA,4BAAQS,QA9BZ,WAEE,IAAMU,EAAiBxB,EAASyB,QAC9B,SAACrB,GAAD,MAAmC,wBAAtBA,EAAQsB,OAAOC,MAG9BJ,EAAoBC,IAwBWnB,UAAU,aAAvC,yBCCSuB,MAhCf,WAAe,MAEmBC,mBAAS,IAF5B,mBAEN7B,EAFM,KAEIsB,EAFJ,OAGmCO,mBAAS,IAH5C,mBAGNC,EAHM,KAGYP,EAHZ,KAsBb,OAhBAQ,qBAAU,WAAY,4CACpB,8BAAAC,EAAA,4DAEI,0FAFJ,SAIyBC,MAFrB,2FAFJ,cAIQC,EAJR,gBAKqBA,EAASC,OAL9B,OAKQC,EALR,OAQEd,EAAYc,EAAKpC,UACjBuB,EAAoBa,EAAKpC,UAT3B,4CADoB,uBAAC,WAAD,wBAYpBqC,KACC,IAID,yBAAKhC,UAAU,OACb,kBAAC,EAAD,CAAQkB,oBAAqBA,EAAqBvB,SAAUA,IAC5D,yBAAKK,UAAU,SACb,kBAAC,EAAD,CAAUL,SAAU8B,OC3BtBQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.3c8f6295.chunk.js","sourcesContent":["import React from \"react\";\n\n//articles dom is defined and rendered in this component.\n//we map through all articles and create a post for each item in that array\n\n// default state is loading and article empty.\nexport default class Articles extends React.Component {\n  //render html\n  render() {\n    const articles = this.props.articles;\n    return (\n      <>\n        {/* map through all articles */}\n        {articles.map((article) => (\n          <div className=\"post\" key={article.title}>\n            <h3 className=\"post__title\">{article.title}</h3>\n            <img\n              className=\"post__image\"\n              src={article.urlToImage}\n              alt=\"article\"\n            />\n            <div className=\"post__info\">\n              <h5>{article.author}</h5>\n              <h6>{article.publishedAt}</h6>\n            </div>\n            <h4 className=\"post__content\">{article.description}</h4>\n            <button\n              className=\"post__button\"\n              onClick={() => (window.location.href = article.url)}\n            >\n              Read more\n            </button>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\n// this is the header component. it contains the headline, tag and the filter buttons\n// the articles state is always unaltered so it can be refetched as the original\n// the displayed articles are always from the filterArticles state.\n\nfunction Header({ setArticles, articles, setFilteredArticles }) {\n  function filterNews() {\n    //filter data to show only posts from the washington post\n    const washingtonPost = articles.filter(\n      (article) => article.source.id === \"the-washington-post\"\n    );\n    //set displayed to filtered version\n    setFilteredArticles(washingtonPost);\n  }\n\n  //set display state to original state\n  function resetNews() {\n    setFilteredArticles(articles);\n  }\n\n  //return dom elements\n  return (\n    <div>\n      <h1>THE NEWS</h1>\n      <h4>\n        This aggressively ugly react web application fetches the biggest\n        headlines in the US and renders them in html using JSX. Click the\n        buttons to filter news.\n      </h4>\n\n      {/* this button calls resetNews */}\n      <button onClick={resetNews} className=\"filterBtn\">\n        All Headlines\n      </button>\n\n      {/* this button calls filterNews */}\n      <button onClick={filterNews} className=\"filterBtn\">\n        The Washington Post\n      </button>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport \"./post.css\";\nimport Articles from \"./Articles\";\nimport Header from \"./Header\";\n\nfunction App() {\n  //declaring states with useState hook. articles stays unaltered while filtered is a filtered version of articles\n  const [articles, setArticles] = useState([]);\n  const [filteredArticles, setFilteredArticles] = useState([]);\n\n  //useEffect hook to fetch fetch data synchronously\n  useEffect(function () {\n    async function getData() {\n      const url =\n        \"https://newsapi.org/v2/top-headlines?country=us&apiKey=3420d4ca8bde49b08e991ed7a552e100\";\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      //when data is loaded, set state to all articles\n      setArticles(data.articles);\n      setFilteredArticles(data.articles);\n    }\n    getData();\n  }, []);\n\n  //return app with a header and articles components\n  return (\n    <div className=\"App\">\n      <Header setFilteredArticles={setFilteredArticles} articles={articles} />\n      <div className=\"posts\">\n        <Articles articles={filteredArticles} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}